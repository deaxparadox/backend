version: '3.8'

services:
  web:
    build: ./backend/
    # command: python manage.py runserver 0.0.0.0:8000
    entrypoint: ["sh", "run.sh"]
    volumes:
      - ./backend/:/usr/src/app/
    ports:
      - 9000:8000
    env_file:
      - ./.env.dev
    depends_on:
      - redis
      # - db
    container_name: backend-django-server
    
  # db:
  #   image: postgres
  #   ports:
  #     - 5432:5432
  #   volumes:
  #     - ./database:/var/lib/postgresql/data
  #   environment:      
  #     - POSTGRES_USER=postgres
  #     - POSTGRES_PASSWORD=136900
  #     - POSTGRES_DB=dockerdb
  #   container_name: backend-db

  celery:
    build: ./backend
    command: celery -A backend worker --loglevel=INFO --logfile=logs/celery.log
    volumes:
      - ./backend/:/usr/src/app/
    env_file:
      - ./.env.dev
    depends_on:
      - redis
      # - db
    container_name: backend-django-celery

  celery-beat:
    build: ./backend
    command: celery -A backend beat --loglevel=INFO
    volumes:
      - ./backend/:/usr/src/app/
    env_file:
      - ./.env.dev
    depends_on:
      - redis
      - celery
    container_name: backend-django-celery-beat

    
  redis:
    image: redis:5
    ports:
      - 6379:6379
    container_name: backend-django-redis

  flower:
    build: ./backend
    command: celery flower -A core --port=5555 --broker=redis://redis:6379/0
    ports:
      - 5555:5555
    env_file:
      - .env.dev
    depends_on:
      - web
      - redis
      - celery
    container_name: backend-django-flower
    